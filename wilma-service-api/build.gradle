/*==========================================================================
Copyright since 2015, EPAM Systems

This file is part of Wilma.

Wilma is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Wilma is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Wilma.  If not, see <http://www.gnu.org/licenses/>.
===========================================================================*/

ext.componentDescription = "Wilma-Service-API"

apply plugin: 'maven-publish'
//apply plugin: 'application'
apply plugin: 'jacoco'

//mainClassName = 'com.epam.wilma.service.client.WilmaService'

//jar {
//    manifest.attributes( 'provider': 'gradle')
//    manifest.attributes( 'Main-Class': mainClassName)
//    manifest.attributes( 'Implementation-Title': "$componentDescription - V$version")
//    archiveName = "$componentName-$version"+'.jar'
//}

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.0.12'
    compile group: 'commons-httpclient', name: 'commons-httpclient', version:'3.1'
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'commons-validator', name: 'commons-validator', version:'1.4.1'
    compile group: "com.github.everit-org.json-schema", name: "org.everit.json.schema", version: "1.9.1"
    compile 'org.json:json:20180813'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
//    testCompile group: 'org.mockito', name: 'mockito-all', version:"${mockitoAllVersion}"
    testCompile group: 'org.mockito', name: 'mockito-core', version: "${mockitoCoreVersion}"
    testImplementation group: 'junit', name: 'junit', version: "${jUnitVersion}"
}

test.useTestNG()

jacoco {
    toolVersion = "0.8.6"
}
jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test.finalizedBy jacocoTestReport

task copyJarToDistributions (type: Copy) {
    dependsOn(sourceZip)
    from("$buildDir/libs/")
    into("$buildDir/distributions")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceZip
            pom.withXml {
                asNode().appendNode('description', 'Wilma - Service API Library')
            }
        }
    }
}

task createPom {
    doLast {
        pom {
        }.writeTo("$buildDir/distributions/$componentName-${version}.pom")
    }
}
createPom.dependsOn(copyJarToDistributions)

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${myLocalRepository}")
        }
    }
}

task docs(type: Javadoc) {
    destinationDir = file("$buildDir/docs/all")
    options.memberLevel = JavadocMemberLevel.PRIVATE
    source += files(sourceSets.main.java)
    classpath += files(sourceSets.main.compileClasspath)
}
