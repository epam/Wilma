/*==========================================================================
Copyright since 2015, EPAM Systems

This file is part of Wilma.

Wilma is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Wilma is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Wilma.  If not, see <http://www.gnu.org/licenses/>.
===========================================================================*/

ext.componentDescription = "Wilma-Service-API"

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'java-library'
apply plugin: 'jacoco'

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.0.12'
    compile group: 'commons-httpclient', name: 'commons-httpclient', version:'3.1'
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'commons-validator', name: 'commons-validator', version:'1.4.1'
    compile group: "com.github.everit-org.json-schema", name: "org.everit.json.schema", version: "1.9.1"
    compile 'org.json:json:20180813'
    testCompile group: 'org.mockito', name: 'mockito-core', version: "${mockitoCoreVersion}"
    testImplementation group: 'junit', name: 'junit', version: "${jUnitVersion}"
}

test.useTestNG()

jacoco {
    toolVersion = "0.8.6"
}
jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test.finalizedBy jacocoTestReport

task copyJarToDistributions (type: Copy) {
    dependsOn(sourceZip)
    from("$buildDir/libs/")
    into("$buildDir/distributions")
}

task createPom {
    doLast {
        pom {
        }.writeTo("$buildDir/distributions/$componentName-${version}.pom")
    }
}
createPom.dependsOn(copyJarToDistributions)

task uploadLocal(type: Upload) {
    configuration = configurations.archives
    uploadDescriptor = true
    repositories {
        mavenDeployer {
            repository(url: "${myLocalRepository}")
        }
    }
}

task docs(type: Javadoc) {
    destinationDir = file("$buildDir/docs/all")
    options.memberLevel = JavadocMemberLevel.PRIVATE
    source += files(sourceSets.main.java)
    classpath += files(sourceSets.main.compileClasspath)
}

java {
//    withJavadocJar()
    withSourcesJar()
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

project.tasks["signArchives"].onlyIf { project.hasProperty('signing.password') }
project.tasks["uploadArchives"].onlyIf { project.hasProperty('signing.password') }
if (!project.hasProperty('ossrhUsername')) {
    project.ext.ossrhUsername = 'foo'
}
if (!project.hasProperty('ossrhPassword')) {
    project.ext.ossrhPassword = 'bar'
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Wilma-Service-API'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Java Service API to work with Wilma tool via its public interfaces. This API can be built into other apps those need to communicate with Wilma.'
                url 'https://github.com/epam/Wilma/wiki'

                scm {
                    connection 'https://github.com/epam/Wilma.git'
                    developerConnection 'https://github.com/epam/Wilma'
                    url 'https://github.com/epam/Wilma/tree/master/'
                }

                licenses {
                    license {
                        name 'GPL-v3.0'
                        url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'tkohegyi'
                        name 'Tamas Kohegyi'
                        email 'tamas_kohegyi@epam.com'
                    }
                }
            }
        }
    }
}
