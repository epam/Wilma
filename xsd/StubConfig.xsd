<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://epam.github.io/Wilma/xsd/StubConfig" targetNamespace="http://epam.github.io/Wilma/xsd/StubConfig"
  xmlns:tns="http://epam.github.io/Wilma/xsd/StubConfig" elementFormDefault="qualified">
  <xs:element name="wilma-stub" type="WilmaStubType">
    <xs:keyref name="templateFormatterSetRef" refer="templateFormatterSets">
      <xs:selector xpath=".//tns:template-formatter-set-invoker" />
      <xs:field xpath="@name" />
    </xs:keyref>
    <xs:key name="templateFormatterSets">
      <xs:selector xpath="./tns:template-descriptor/tns:template-formatter-set" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="conditionSetRef" refer="conditionSets">
      <xs:selector xpath=".//tns:condition-set-invoker" />
      <xs:field xpath="@name" />
    </xs:keyref>
    <xs:key name="conditionSets">
      <xs:selector xpath="./tns:condition-templates/tns:condition-set" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:keyref name="templateRef" refer="templates">
      <xs:selector xpath="./tns:dialog-descriptor/tns:response-descriptor" />
      <xs:field xpath="@template" />
    </xs:keyref>
    <xs:keyref name="dialogDescriptorRef" refer="uniqueDialogDescriptor">
      <xs:selector xpath="./tns:sequence-descriptor/tns:dialog-descriptors/tns:dialog-descriptor-ref" />
      <xs:field xpath="@ref" />
    </xs:keyref>
    <xs:keyref name="sequenceDescriptorRef" refer="uniqueSequenceDescriptor">
      <xs:selector xpath="./tns:dialog-descriptor/tns:response-descriptor" />
      <xs:field xpath="@sequenceDescriptorName" />
    </xs:keyref>
    <xs:key name="templates">
      <xs:selector xpath="./tns:template-descriptor/tns:template" />
      <xs:field xpath="@name" />
    </xs:key>
    <xs:unique name="uniqueDialogDescriptor">
      <xs:selector xpath="tns:dialog-descriptor" />
      <xs:field xpath="@name" />
    </xs:unique>
    <xs:unique name="uniqueTemplateDescriptor">
      <xs:selector xpath="tns:template-descriptor" />
      <xs:field xpath="@name" />
    </xs:unique>
    <xs:unique name="uniqueConditionTemplates">
      <xs:selector xpath="tns:condition-templates" />
      <xs:field xpath="@name" />
    </xs:unique>
    <xs:unique name="uniqueSequenceDescriptor">
      <xs:selector xpath="tns:sequence-descriptor" />
      <xs:field xpath="@name" />
    </xs:unique>
  </xs:element>

  <xs:complexType name="WilmaStubType">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="sequence-descriptor" type="SequenceDescriptor" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="dialog-descriptor" type="DialogDescriptor" minOccurs="1" maxOccurs="unbounded" />
      <xs:element name="template-descriptor" type="TemplateDescriptor" minOccurs="1" maxOccurs="unbounded">
        <xs:unique name="uniqueTemplate">
          <xs:selector xpath="tns:template" />
          <xs:field xpath="@name" />
        </xs:unique>
        <xs:unique name="uniqueTemplateFormatterSet">
          <xs:selector xpath="tns:template-formatter-set" />
          <xs:field xpath="@name" />
        </xs:unique>
      </xs:element>
      <xs:element name="condition-templates" type="ConditionTemplates" minOccurs="0" maxOccurs="unbounded">
        <xs:unique name="uniqueConditionSet">
          <xs:selector xpath="tns:condition-set" />
          <xs:field xpath="@name" />
        </xs:unique>
      </xs:element>
      <xs:element name="interceptors" type="Interceptors" minOccurs="0" maxOccurs="1" />
    </xs:sequence>
   <xs:attribute name="groupname" default="Default">
     <xs:simpleType>
       <xs:restriction base="xs:string">
         <xs:pattern value="[^/|^/;]+" />
       </xs:restriction>
     </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="active" type="xs:boolean" default="true" />
  </xs:complexType>

  <xs:complexType name="DialogDescriptor">
    <xs:sequence>
      <xs:element name="condition-descriptor" type="ConditionDescriptor" />
      <xs:element name="response-descriptor" type="ResponseDescriptor" />
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="usage" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="always" />
          <xs:enumeration value="timeout" />
          <xs:enumeration value="hitcount" />
          <xs:enumeration value="disabled" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="validityValue">
      <xs:simpleType>
        <xs:restriction base="xs:integer">
          <xs:minInclusive value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="comment" type="xs:string" />
  </xs:complexType>
  
  <xs:complexType name="SequenceDescriptor">
    <xs:sequence>
      <xs:element name="condition-descriptor" type="ConditionDescriptor" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="dialog-descriptors" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="dialog-descriptor-ref" type="DialogDescriptorRef" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sequence-class-parameters" minOccurs="0" maxOccurs="1">
       <xs:complexType>
        <xs:sequence>
          <xs:element name="param" type="StringParam" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
       </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" use="required" >
     <xs:simpleType>
       <xs:restriction base="xs:string">
         <xs:pattern value="[^/|^/;]+" />
       </xs:restriction>
     </xs:simpleType>
   </xs:attribute>
    <xs:attribute name="class" type="xs:string" use="required" />
    <xs:attribute name="timeout" type="xs:long" />
  </xs:complexType>

  <xs:complexType name="DialogDescriptorRef">
    <xs:attribute name="ref" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ConditionDescriptor">
    <xs:choice>
      <xs:element name="and" type="and" />
      <xs:element name="or" type="or" />
      <xs:element name="not" type="not" />
      <xs:element name="condition" type="Condition" />
      <xs:element name="condition-set-invoker" type="ConditionSetInvoker" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="Condition">
    <xs:sequence>
      <xs:element name="param" type="StringParam" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="class" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="negate" type="xs:boolean" default="false" />
  </xs:complexType>

  <xs:complexType name="StringParam">
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="value" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>


  <xs:complexType name="and">
    <xs:choice minOccurs="2" maxOccurs="unbounded">
      <xs:element name="condition" type="Condition" />
      <xs:element name="condition-set-invoker" type="ConditionSetInvoker" />
      <xs:element name="and" type="and" />
      <xs:element name="or" type="or" />
      <xs:element name="not" type="not" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="or">
    <xs:choice minOccurs="2" maxOccurs="unbounded">
      <xs:element name="condition" type="Condition" />
      <xs:element name="condition-set-invoker" type="ConditionSetInvoker" />
      <xs:element name="and" type="and" />
      <xs:element name="or" type="or" />
      <xs:element name="not" type="not" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="not">
    <xs:choice>
      <xs:element name="condition" type="Condition" />
      <xs:element name="condition-set-invoker" type="ConditionSetInvoker" />
      <xs:element name="and" type="and" />
      <xs:element name="or" type="or" />
      <xs:element name="not" type="not" />
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="ConditionSetInvoker">
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ConditionTemplates">
    <xs:sequence>
      <xs:element name="condition-set" type="ConditionSet" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="ConditionSet">
    <xs:choice>
      <xs:element name="and" type="and" />
      <xs:element name="or" type="or" />
      <xs:element name="not" type="not" />
      <xs:element name="condition" type="Condition" />
      <xs:element name="condition-set-invoker" type="ConditionSetInvoker" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ResponseDescriptor">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="template-formatter" type="TemplateFormatter"/>
      <xs:element name="template-formatter-set-invoker" type="TemplateFormatterSetInvoker"/>
    </xs:choice>
    <xs:attributeGroup ref="responseDescriptorAttributes" />
  </xs:complexType>

  <xs:attributeGroup name="responseDescriptorAttributes">
    <xs:attribute name="delay" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:integer">
          <xs:minInclusive value="0" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="code" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:integer">
          <!-- to ask about other error codes -->
          <xs:minInclusive value="100"/>
          <xs:maxExclusive value="600"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="mimetype" use="required" type="xs:string"/>
    <xs:attribute name="template" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="sequenceDescriptorName">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:complexType name="TemplateDescriptor">
     <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="template-formatter-set" type="TemplateFormatterSet" />
      <xs:sequence minOccurs="1">
        <xs:element maxOccurs="unbounded" name="template" type="Template" />
        <xs:element minOccurs="0" maxOccurs="unbounded" name="template-formatter-set" type="TemplateFormatterSet" />
      </xs:sequence>
    </xs:sequence>

    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Template">
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="xml"></xs:enumeration>
          <xs:enumeration value="text"></xs:enumeration>
          <xs:enumeration value="html"></xs:enumeration>
          <xs:enumeration value="json"></xs:enumeration>
          <xs:enumeration value="xmlfile"></xs:enumeration>
          <xs:enumeration value="textfile"></xs:enumeration>
          <xs:enumeration value="htmlfile"></xs:enumeration>
          <xs:enumeration value="jsonfile"></xs:enumeration>
          <xs:enumeration value="external"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="resource" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TemplateFormatterSet">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="template-formatter" type="TemplateFormatter" />
      <xs:element name="template-formatter-set-invoker" type="TemplateFormatterSetInvoker" />
    </xs:choice>
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TemplateFormatterSetInvoker">
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TemplateFormatter">
    <xs:sequence>
      <xs:element name="param" type="AnySimpleTypeParam" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="class" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="Interceptors">
    <xs:sequence>
      <xs:element name="interceptor" type="Interceptor" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Interceptor">
    <xs:sequence>
      <xs:element name="param" type="AnySimpleTypeParam" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="class" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

   <xs:complexType name="AnySimpleTypeParam">
    <xs:attribute name="name" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="value" type="xs:anySimpleType" use="required" />
  </xs:complexType>

</xs:schema>