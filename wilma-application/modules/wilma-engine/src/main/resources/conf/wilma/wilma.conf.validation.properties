############################################################################
# Copyright 2013-2017 EPAM Systems
#
# This file is part of Wilma.
#
# Wilma is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Wilma is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Wilma.  If not, see <http://www.gnu.org/licenses/>.
############################################################################

# Ognl rules for validating configuration properties given in wilma.conf.properties

#the proxy port must be a number between 1 and 65535
proxy.port=#this >=1 and #this <= 65535

#the web app port must be a number between 1 and 65535
internal.wilma.port=#this >=1 and #this <= 65535

#the jms queue port must be a number between 1 and 65535
jms.queue.port=#this >=1 and #this <= 65535

#the request timeout must be a number
proxy.request.timeout=#this.matches("^[0-9]+$")

#the cron expression must not be empty
log.maintainer.cron=#this not in {null}

#the log maintainer method can be either 'timelimit' or 'filelimit'
log.maintainer.method=#this in {"timelimit", "filelimit"}

#the file limit must be a number
log.maintainer.file.limit=#this.matches("^[0-9]+$")

#the time limit must be under the form xH or xD or xS, where x is a number
log.maintainer.time.limit=#this.matches("[0-9]+H") || #this.matches("[0-9]+D") || #this.matches("[0-9]+S")

#the cron expression must not be empty
safeguard.guardperiod=#this not in {null}

#the fastinfoset decompression OFF limit must be a number
safeguard.responseFIdecoder.OFFlimit=#this.matches("^[0-9]+$")

#the fastinfoset decompression ON limit must be a number and must be smaller than the OFF limit
safeguard.responseFIdecoder.ONlimit=#this.matches("^[0-9]+$")

#the response logging OFF limit must be a number
safeguard.responseMessageWriter.OFFlimit=#this.matches("^[0-9]+$")

#the response logging ON limit must be a number and must be smaller than the OFF limit
safeguard.responseMessageWriter.ONlimit=#this.matches("^[0-9]+$")

#the max depth of the stub descriptor must be a number between 1 and 1000
stub.descriptor.max.depth=#this >= 1 && #this <= 1000

#the operation mode of the application can take the values 'stub' or 'proxy' or 'wilma'
switch=#this in {"stub", "proxy", "wilma"}

#the cron expression must not be empty
sequence.cleanup.cron=#this not in {null}

#block localhost usage can take the values 'on' or 'off'
block.localhost.usage=#this in {"on", "off"}

#sequence Handling can take the values 'on' or 'off'
sequence.handling.state=#this in {"on", "off"}

#interceptor can take the values 'on' or 'off'
interceptor=#this in {"on", "off"}

#message logging can take the values 'on' or 'off'
message.logging=#this in {"on", "off"}

#message marker can take the values 'on' or 'off'
message.marking=#this in {"on", "off"}

# the default timeout of sequences must be a natural number
sequence.timeout=#this >=0

sequence.response.wait.interval=#this >= 1

#the size of the request buffer must be a natural number
internal.wilma.request.buffer.size=#this not in {null} && #this >=0

#the size of the response buffer must be a natural number
internal.wilma.response.buffer.size=#this not in {null} && #this >=0

# Extension pattern of the stub descriptor must be *.xml
stub.descriptors.pattern=#this not in {null}

#this path must be relative path or empty string
stub.descriptors.path=#this not in {null}

#this path must be relative path
stub.jar.path=#this not in {null}

#this path must be relative path
stub.sequence.handler.path=#this not in {null}

#this value must be at least ten or greater
message.log.UI.maxsize=#this not in {null} && #this >=10